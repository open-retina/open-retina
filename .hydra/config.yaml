data_io:
  stimuli:
    _target_: openretina.data_io.lorenzi_2025.stimuli.load_all_stimuli
    _convert_: object
    base_data_path: ${paths.data_dir}
    stim_type: flashednaturalscene
    normalize_stimuli: true
  responses:
    _target_: openretina.data_io.lorenzi_2025.responses.load_all_responses
    _convert_: object
    base_data_path: ${paths.data_dir}
    stim_type: flashednaturalscene
    response_type: firing_rate_25ms
    fr_normalization: 1.0
dataloader:
  _target_: openretina.data_io.base_dataloader.multiple_movies_dataloaders
  _convert_: object
  batch_size: 64
  train_chunk_size: 50
  clip_length: 90
  num_val_clips: 20
  allow_over_boundaries: true
model:
  _target_: openretina.models.core_readout.CoreReadout
  _convert_: object
  in_shape:
  - 1
  - 31
  - 30
  - 30
  hidden_channels:
  - 8
  temporal_kernel_sizes:
  - 16
  spatial_kernel_sizes:
  - 15
  core_gamma_input: 0.0
  core_gamma_in_sparse: 0.0
  core_gamma_hidden: 0.0
  core_gamma_temporal: 40.0
  core_input_padding: false
  core_hidden_padding: true
  maxpool_every_n_layers: null
  downsample_input_kernel_size: null
  n_neurons_dict: ???
  readout_scale: true
  readout_bias: true
  readout_gaussian_masks: true
  readout_gaussian_mean_scale: 6.0
  readout_gaussian_var_scale: 4.0
  readout_positive: true
  readout_gamma: 0.4
  learning_rate: 0.01
  cut_first_n_frames_in_core: 0
  dropout_rate: 0.0
training_callbacks:
  early_stopping:
    _target_: lightning.pytorch.callbacks.EarlyStopping
    monitor: val_correlation
    min_delta: 0.001
    patience: 10
    verbose: true
    mode: max
    strict: true
    check_finite: false
  lr_monitor:
    _target_: lightning.pytorch.callbacks.LearningRateMonitor
    logging_interval: epoch
    log_momentum: true
    log_weight_decay: true
  model_checkpoint:
    _target_: lightning.pytorch.callbacks.ModelCheckpoint
    dirpath: ${paths.output_dir}/checkpoints
    filename: '{epoch:02d}_{val_correlation:.3f}'
    monitor: val_correlation
    verbose: false
    save_last: false
    save_top_k: 1
    mode: max
    auto_insert_metric_name: true
    save_weights_only: false
    every_n_train_steps: null
    train_time_interval: null
    every_n_epochs: null
    save_on_train_epoch_end: null
  mlflow_run_name:
    _target_: openretina.utils.custom_mlflow_logger_callback.MLflowRunNameCallback
    exp_name: ${exp_name}
    include_trial_num: true
logger:
  tensorboard:
    _target_: lightning.pytorch.loggers.TensorBoardLogger
    name: null
    save_dir: ${paths.output_dir}/tensorboard/
    prefix: ''
    version: ''
  csv:
    _target_: lightning.pytorch.loggers.csv_logs.CSVLogger
    save_dir: ${paths.output_dir}
    name: csv/
    prefix: ''
    version: ''
  mlflow:
    _target_: lightning.pytorch.loggers.MLFlowLogger
    experiment_name: ${exp_name}
    save_dir: ./mlflow/
    log_model: false
    run_name: null
trainer:
  _target_: lightning.Trainer
  default_root_dir: ${paths.output_dir}
  deterministic: warn
  max_epochs: 50
  gradient_clip_val: 1
  precision: 32-true
  accumulate_grad_batches: 1
exp_name: core_readout_lorenzi_test
seed: 42
check_stimuli_responses_match: false
objective_target: val_correlation
paths:
  cache_dir: null
  data_dir: /home/baptiste/Documents/LabPipelines/open-retina/notebooks/data/omarre_lab/
  log_dir: .
  output_dir: ${hydra:runtime.output_dir}
matmul_precision:
  _target_: torch.set_float32_matmul_precision
  precision: highest
